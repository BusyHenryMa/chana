/*
 * Definition of JPQL literal tokens.
 * 
 * @author Caoyuan Deng
 */
module Literal;

import Character;
import Identifier;
import Spacing;
import Keyword;


transient generic LiteralNumeric =
  LiteralFloat
/ LiteralDouble
/ LiteralLong
/ LiteralInteger
;

// ----- Integer literals

transient generic LiteralInteger =
  [0-9]+
;

transient generic LiteralLong =
  LiteralInteger [lL]     
;

// ----- Decimal literals

transient generic LiteralDecimal =
  [0-9]* '.' [0-9]+ exponent?
/ [0-9]+ '.'        exponent?
/ [0-9]+            exponent
;

transient generic LiteralDouble =
  LiteralDecimal [dD]?
;

transient generic LiteralFloat =
  LiteralDecimal [fF]
;

transient String exponent = 
  [eE] [+\-]? [0-9]+ 
;

// ----- Character and String Literals

transient generic LiteralCharacter = 
  ['] characterChar ['] 
;

transient generic LiteralString = 
  LiteralDoubleQuotedString
/ LiteralSingleQuotedString
;

transient generic LiteralDoubleQuotedString = 
 ["] stringChar* ["] 
;

transient generic LiteralSingleQuotedString = 
 ['] ( "''" / characterChar )* [']
;

// ----- Date Time literal

transient generic LiteralDate = 
  "{d'" ( [0-9][0-9][0-9][0-9] '-' [0-9][0-9] '-' [0-9][0-9] ) "'}"
;

transient generic LiteralTime = 
  "{t'" ( [0-9][0-9] ':' [0-9][0-9] ':' [0-9][0-9] ) "'}"
;

transient generic LiteralTimestamp =
  "{ts'" ( [0-9][0-9][0-9][0-9] '-' [0-9][0-9] '-' [0-9][0-9] ) w+ 
    ( [0-9][0-9] ':' [0-9][0-9] ':' [0-9][0-9] ) 
    ( '.' [0-9]* "'}" 
    / "'}" 
    )
;

// ----- Boolean literal
transient generic LiteralBoolean =
  TRUE / FALSE
;