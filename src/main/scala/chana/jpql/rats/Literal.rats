/*
 * Definition of JPQL literal tokens.
 * 
 * @author Caoyuan Deng
 */
module Literal;

import Character;
import Identifier;
import Spacing;
import Keyword;


transient genecit NumericLiteral =
  IntegerLiteral
/ DecimalLiteral
;

// ----- Integer literals

transient generic IntegerLiteral =
  [0-9]+ [lL]?     
;

// ----- Decimal literals

transient generic DecimalLiteral =
  [0-9]* '.' [0-9]+ exponent? [fFdD]?
/ [0-9]+ '.'        exponent? [fFdD]?
/ [0-9]+            exponent  [fFdD]?
/ [0-9]+            exponent? [fFdD]? 
;

transient String exponent = 
  [eE] [+\-]? [0-9]+ 
;

// ----- Character and String Literals

transient generic CharacterLiteral = 
  ['] characterChar ['] 
;

transient generic StringLiteral = 
  DoubleQuotedStringLiteral
/ SingleQuotedStringLiteral
;

transient generic DoubleQuotedStringLiteral = 
 ["] stringChar* ["] 
;

transient generic SingleQuotedStringLiteral = 
 ['] ( "''" / characterChar )* [']
;

// ----- Date Time literal

transient generic DateLiteral = 
  "{d '" ( [0-9][0-9][0-9][0-9] '-' [0-9][0-9] '-' [0-9][0-9] ) "'}"
;

transient generic TimeLiteral = 
  "{t '" ( [0-9][0-9] ':' [0-9][0-9] ':' [0-9][0-9] ) "'}"
;

transient generic TimestampLiteral =
  "{ts '" ( [0-9][0-9][0-9][0-9] '-' [0-9][0-9] '-' [0-9][0-9] ) w+ 
    ( [0-9][0-9] ':' [0-9][0-9] ':' [0-9][0-9] ) 
    ( '.' [0-9]* "'}" 
    / "'}" 
    )
;

// ----- Boolean literal
transient generic BooleanLiteral =
  TRUE / FALSE
;